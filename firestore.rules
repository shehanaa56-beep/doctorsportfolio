rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // By default, require auth for reads/writes
    match /{document=**} {
      allow read: if true; // public read for site content; change to restrict if needed
      allow write: if false; // default deny writes; define specific rules below
    }

    // Admin-only write areas
    match /services/{docId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
    }

    match /site/{docId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
    }

    // Other collections can follow the same pattern
    match /testimonials/{docId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
    }

    match /blogs/{docId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
    }

    match /faqs/{docId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
    }

    match /caseStudies/{docId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
    }

    match /contacts/{docId} {
      // allow public write so forms can submit without auth
      allow create: if true;
      allow read: if request.auth != null && (request.auth.token.admin == true || exists(/databases/$(database)/documents/site/admins) && get(/databases/$(database)/documents/site/admins).data.emails.hasAny([request.auth.token.email]));
      allow delete, update: if false;
    }
  }
}
